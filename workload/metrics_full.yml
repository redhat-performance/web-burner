# API server

# metrics:    # Not needed since kube-version >= 0.12

- query: histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{apiserver="kube-apiserver", verb!~"WATCH", subresource!="log"}[2m])) by (verb,resource,subresource,instance,le)) > 0
  metricName: API99thLatency

- query: sum(irate(apiserver_request_total{apiserver="kube-apiserver",verb!="WATCH",subresource!="log"}[2m])) by (verb,instance,resource,code) > 0
  metricName: APIRequestRate

# P&F
- query: rate(apiserver_flowcontrol_dispatched_requests_total[2m]) > 0
  metricName: APIFlowControlDispatchedRequests

- query: sum(apiserver_flowcontrol_current_executing_requests) by (instance, priority_level,flow_schema) > 0
  metricName: APIFlowControlCurrentExecutingRequests

- query: rate(apiserver_flowcontrol_rejected_requests_total[2m]) > 0
  metricName: APIFlowControlRejectedRequests

- query: sum(apiserver_flowcontrol_current_inqueue_requests) by (instance, flow_schema, priority_level) > 0
  metricName: APIFlowControlInqueueRequests

- query: avg(apiserver_flowcontrol_request_concurrency_limit{}) by (priority_level)
  metricName: APIFlowControlRequestConcurrencyLimit
  instant: true

- query: sum(apiserver_current_inflight_requests{}) by (request_kind) > 0
  metricName: APIInflightRequests

# Containers & pod metrics
- query: sum(irate(container_cpu_usage_seconds_total{name!="",namespace=~"openshift-(etcd|oauth-apiserver|.*apiserver|ovn-kubernetes|sdn|ingress|authentication|.*controller-manager|.*scheduler|monitoring|logging|image-registry)"}[2m]) * 100) by (pod, namespace, node)
  metricName: podCPU

- query: sum(container_memory_rss{name!="",namespace=~"openshift-(etcd|oauth-apiserver|.*apiserver|ovn-kubernetes|sdn|ingress|authentication|.*controller-manager|.*scheduler|monitoring|logging|image-registry)"}) by (pod, namespace, node)
  metricName: podMemory

- query: (sum(rate(container_fs_writes_bytes_total{container!="",device!~".+dm.+"}[5m])) by (device, container, node) and on (node) kube_node_role{role="master"}) > 0
  metricName: containerDiskUsage

- query: sum(irate(container_cpu_usage_seconds_total{container!="",namespace=~"openshift-ovn-kubernetes"}[2m]) * 100) by (container, namespace, node)
  metricName: containerCPU

- query: sum(container_memory_rss{name!="",namespace=~"openshift-ovn-kubernetes"}) by (container, namespace, node)
  metricName: containerMemory

# Aggregated
- query: (avg(irate(container_cpu_usage_seconds_total{name!="",container!="POD",namespace=~"openshift-ovn-kubernetes"}[2m]) * 100 and on (node) kube_node_role{role="master"}) by (namespace, container)) > 0
  metricName: containerCPU-AggregatedMasters

- query: (avg(irate(container_cpu_usage_seconds_total{name!="",container!="POD",namespace=~"openshift-ovn-kubernetes"}[2m]) * 100 and on (node) kube_node_role{role="worker"}) by (namespace, container)) > 0
  metricName: containerCPU-AggregatedWorkers

- query: (avg(irate(container_cpu_usage_seconds_total{name!="",container!="POD",namespace=~"openshift-ovn-kubernetes"}[2m]) * 100 and on (node) kube_node_role{role="worker"} and on (node) kube_node_labels{label_kubernetes_io_hostname=~"worker002-fc640|worker003-fc640"}) by (namespace, container)) > 0
  metricName: containerCPU-AggregatedWorkersServing

- query: (avg(irate(container_cpu_usage_seconds_total{name!="",container!="POD",namespace=~"openshift-ovn-kubernetes"}[2m]) * 100 and on (node) kube_node_role{role="worker"} and on (node) kube_node_labels{label_kubernetes_io_hostname!~"worker002-fc640|worker003-fc640"}) by (namespace, container)) > 0
  metricName: containerCPU-AggregatedWorkersServed

- query: avg(container_memory_rss{name!="",container!="POD",namespace=~"openshift-ovn-kubernetes"} and on (node) kube_node_role{role="master"}) by (container, namespace)
  metricName: containerMemory-AggregatedMasters

- query: avg(container_memory_rss{name!="",container!="POD",namespace=~"openshift-ovn-kubernetes"} and on (node) kube_node_role{role="worker"}) by (container, namespace)
  metricName: containerMemory-AggregatedWorkers

- query: avg(container_memory_rss{name!="",container!="POD",namespace=~"openshift-ovn-kubernetes"} and on (node) kube_node_labels{label_kubernetes_io_hostname=~"worker002-fc640|worker003-fc640"}) by (container, namespace)
  metricName: containerMemory-AggregatedWorkersServing

- query: avg(container_memory_rss{name!="",container!="POD",namespace=~"openshift-ovn-kubernetes"} and on (node) kube_node_role{role="worker"} and on (node) kube_node_labels{label_kubernetes_io_hostname!~"worker002-fc640|worker003-fc640"}) by (container, namespace)
  metricName: containerMemory-AggregatedWorkersServed

# Kubelet & CRI-O metrics
- query: sum(irate(process_cpu_seconds_total{service="kubelet",job="kubelet"}[2m]) * 100) by (node) and on (node) kube_node_role{role="worker"}
  metricName: kubeletCPU

- query: sum(process_resident_memory_bytes{service="kubelet",job="kubelet"}) by (node) and on (node) kube_node_role{role="worker"}
  metricName: kubeletMemory

- query: sum(irate(process_cpu_seconds_total{service="kubelet",job="crio"}[2m]) * 100) by (node) and on (node) kube_node_role{role="worker"}
  metricName: crioCPU

- query: sum(process_resident_memory_bytes{service="kubelet",job="crio"}) by (node) and on (node) kube_node_role{role="worker"}
  metricName: crioMemory

# Node metrics
- query: sum(irate(node_cpu_seconds_total[2m])) by (mode,instance) > 0
  metricName: nodeCPU

- query: avg(node_memory_MemAvailable_bytes) by (instance)
  metricName: nodeMemoryAvailable

- query: avg(node_memory_Active_bytes) by (instance)
  metricName: nodeMemoryActive

- query: avg(node_memory_Cached_bytes) by (instance) + avg(node_memory_Buffers_bytes) by (instance)
  metricName: nodeMemoryCached+nodeMemoryBuffers

- query: irate(node_network_receive_bytes_total{device=~"^(ens|eth|bond|team).*"}[2m])
  metricName: rxNetworkBytes

- query: irate(node_network_transmit_bytes_total{device=~"^(ens|eth|bond|team).*"}[2m])
  metricName: txNetworkBytes

- query: rate(node_disk_written_bytes_total{device!~"^(dm|rb).*"}[2m])
  metricName: nodeDiskWrittenBytes

- query: rate(node_disk_read_bytes_total{device!~"^(dm|rb).*"}[2m])
  metricName: nodeDiskReadBytes

- query: sum(rate(etcd_server_leader_changes_seen_total[2m]))
  metricName: etcdLeaderChangesRate

# Etcd metrics
- query: etcd_server_is_leader > 0
  metricName: etcdServerIsLeader

- query: histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket[2m]))
  metricName: 99thEtcdDiskBackendCommitDurationSeconds

- query: histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket[2m]))
  metricName: 99thEtcdDiskWalFsyncDurationSeconds

- query: histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket[5m]))
  metricName: 99thEtcdRoundTripTimeSeconds

- query: etcd_mvcc_db_total_size_in_bytes
  metricName: etcdDBPhysicalSizeBytes

- query: etcd_mvcc_db_total_size_in_use_in_bytes
  metricName: etcdDBLogicalSizeBytes

- query: sum(rate(etcd_object_counts{}[5m])) by (resource) > 0
  metricName: etcdObjectCount

- query: sum by (cluster_version)(etcd_cluster_version)
  metricName: etcdVersion
  instant: true

# Cluster metrics
- query: sum(kube_namespace_status_phase) by (phase) > 0
  metricName: namespaceCount

- query: sum(kube_pod_status_phase{}) by (phase)
  metricName: podStatusCount

- query: count(kube_secret_info{})
  metricName: secretCount

- query: count(kube_deployment_labels{})
  metricName: deploymentCount

- query: count(kube_configmap_info{})
  metricName: configmapCount

- query: count(kube_service_info{})
  metricName: serviceCount

- query: kube_node_role
  metricName: nodeRoles
  instant: true

- query: sum(kube_node_status_condition{status="true"}) by (condition)
  metricName: nodeStatus

- query: cluster_version{type="completed"}
  metricName: clusterVersion
  instant: true
